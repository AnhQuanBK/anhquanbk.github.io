var I=Object.defineProperty;var g=(h,b)=>I(h,"name",{value:b,configurable:!0});System.register(["./core.js","../GameCore.js","./__commonjsHelpers__.js"],function(h,b){"use strict";var p,w;return{setters:[l=>{p=l.G},l=>{w=l.D},null],execute:g(function(){const{Configs:l,Utils:M}=p,{MinScore:R,MaxScore:P,NumOfLeaders:L,ErrorRate:E,DefaultLimit:j,RandomDelayMs:O}=l.Mockup.Leaderboards,{Valid:u,Browser:y,Time:_,Object:f,Number:G}=M,B="LeadersMockKey",S="LeaderboardsMockKey",D=class D{async getPlayers(e,r){if(await this.awaitRandomDelay(),this.randomResponseError("Get players error"))return{data:[]};const{playerIds:a}=r,t=[];if(a&&a.length>0){const n=this.getLeadersData(e);for(const s of a){const o=n[s];o&&t.push(o)}}return{data:t}}async getLeaders(e,r){if(await this.awaitRandomDelay(),this.randomResponseError("Get leaders error"))return{data:[]};const{limit:a,offset:t}=r,n=this.getLeadersData(e),s=f.vals(n);this.sortLeadersRank(s);const o=[],d=t,c=a===0?j:t+a;for(let i=d;i<c;i++){const k=s[i];k&&o.push(k)}return this.sortLeadersRank(o),{data:o}}async getLeaderboardAsync(e){if(await this.awaitRandomDelay(),this.randomResponseError("Get leaderboard error"))return null;const r=this.getLeaderBoard(e);return r||(console.warn(`[LeaderboardAPIMock] Leaderboard ${e} not found`),null)}async getLeaderboardsAsync(e){if(await this.awaitRandomDelay(),this.randomResponseError("Get leaderboards error"))return[];const{limit:r=9999,type:a}=e;if(r<=0)return[];const t=this.getLeaderBoardsData(),n=f.vals(t);return a===void 0?n.slice(0,r):n.filter(o=>o.type===a).slice(0,r)}getLeadersData(e){const r=this.getPlayersData(),a=Object.keys(r[e]),t={};for(const n of a){const s=r[e][n];u.isObject(s)&&(t[n]=s)}return t}sortLeadersRank(e){e.sort((r,a)=>Number.parseInt(a.score,10)-Number.parseInt(r.score,10)),e.forEach((r,a)=>{r.rank=a+1})}async setScoreAsync(e,r,a){if(await this.awaitRandomDelay(),this.randomResponseError("Set score error"))return null;const t={success:!1},n=this.getLeaderBoard(e);if(!n)return console.warn(`[LeaderboardAPIMock] Leaderboard ${e} not found`),t;const s=this.getPlayersData();let o=s[e][r];o||(o=this.createPlayerData(r),n.amountPlayer+=1,n.numberOfLeaders+=1,this.writeLeaderBoard(e,n)),o.score=a.toString(),s[e][r]=o;const d=f.vals(s[e]);return this.sortLeadersRank(d),d.forEach((c,i)=>{s[e][c.playerId]=c}),this.writePlayersData(e,s),t.success=!0,t}async createLeaderboard(e){if(await this.awaitRandomDelay(),this.randomResponseError("Create leaderboard error"))return null;const{_id:r}=e,a=this.getLeaderBoardsData();if(a[r])return a[r];let{numberOfLeaders:t}=e;return t=t??G.random(L.Max-L.Min)+L.Min,this.createPlayersData(e,t),this.createLeaderboardData(e,t)}createLeaderboardData(e,r){const{_id:a}=e,t={...w,...e,createdAt:new Date().toISOString(),createdBy:"mock",numberOfLeaders:r,amountPlayer:r};return this.writeLeaderBoard(a,t),t}createPlayersData(e,r){const{_id:a,name:t}=e,n=t==="friends-leaderboard-key",s={[a]:{}},o=[];for(let d=0;d<r;d++){const c=n?`connected-player-${d}`:d.toString(),i=this.createPlayerData(c);o.push(i)}return this.sortLeadersRank(o),o.forEach((d,c)=>{s[a][d.playerId]=d}),this.writePlayersData(a,s),s}createPlayerData(e){return{playerId:e,score:this.randomScore(),rank:0}}randomScore(){return Math.floor(Math.random()*(P-R)+R).toString()}getLeaderBoardsData(){const e=y.getLocalStorage(S);return u.isObject(e)?e:{}}writeLeaderBoardsData(e){u.isObject(e)&&y.writeLocalStorage(S,e)}getLeaderBoard(e){const r=this.getLeaderBoardsData();return r[e]?r[e]:null}writeLeaderBoard(e,r){const a=this.getLeaderBoardsData();a[e]=r,this.writeLeaderBoardsData(a)}getPlayersData(){const e=y.getLocalStorage(B);return u.isObject(e)?e:{}}writePlayersData(e,r){const a=this.getPlayersData();a[e]||(a[e]={}),f.assign(a[e],r[e]),y.writeLocalStorage(B,a)}randomResponseError(e){return Math.random()*100<E?(console.warn("[LeaderboardAPIMock]",e),!0):!1}async awaitRandomDelay(){await _.sleepAsync(Math.random()*O)}};g(D,"LeaderboardAPIMock");let m=D;h("default",m)},"execute")}});
